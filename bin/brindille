#!/usr/bin/env node
const prog = require('caporal')
const chalk = require('chalk')
const scaffold = require('../lib/scaffold')
const browserify = require('../lib/browserify')
const stylus = require('../lib/stylus')
const createLogger = require('../lib/utils/logger').createLogger

function component (args, options, logger, type = 'components') {
  logger.info('\n' + chalk.blue('⊧Brindille'))
  scaffold({name: args.name, type: type, interactive: options.interactive}, logger)
}

function layout (args, options, logger) {
  component(args, options, logger, 'layouts')
}

function section (args, options, logger) {
  component(args, options, logger, 'sections')
}

function watch (args, options, logger) {
  logger.info('\n' + chalk.blue('⊧Brindille'))
  browserify('src/index.js', {isProd: false, transforms: args.transforms}, logger)
  stylus('src/stylus/main.styl', {isProd: false}, logger)
}

function build (args, options, logger) {
  logger.info('\n' + chalk.blue('⊧Brindille'))
  browserify('src/index.js', {isProd: true, transforms: args.transforms}, logger)
  stylus('src/stylus/main.styl', {isProd: true}, logger)
}

prog
  .version('1.0.1')
  .logger(createLogger())
  .command('watch', 'Launches a dev watch process compiling both JS and Stylus')
    .action(watch)
    .argument('[transforms...]', 'Browserify transforms')
  .command('build', 'Builds and minifies JS and Stylus')
    .action(build)
    .argument('[transforms...]', 'Browserify transforms')
  .command('component', 'Scaffolds a component')
    .argument('<name>', 'Name of the component', /([A-Z])\w+/)
    .option('--interactive', 'To make the component interactive')
    .action(component)
  .command('section', 'Scaffolds a section')
    .argument('<name>', 'Name of the component', /([A-Z])\w+/)
    .action(section)
  .command('layout', 'Scaffolds a layout')
    .argument('<name>', 'Name of the component', /([A-Z])\w+/)
    .action(layout)

prog.parse(process.argv)
